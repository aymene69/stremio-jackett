<html lang="en">
	<head>
		<title>Stremio-Jackett</title>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link href="styles.css" rel="stylesheet" />
		<link
			href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
			rel="stylesheet"
			integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
			crossorigin="anonymous"
		/>
	</head>
	<body>
		<section class="vh-100">
			<div class="container py-5">
				<div class="row d-flex justify-content-center align-items-center">
					<div class="col-12 col-md-8 col-lg-6 col-xl-5">
						<div class="card bg-dark text-white" style="border-radius: 1rem">
							<div class="card-body p-5 text-center">
								<div class="mb-md-5 mt-md-4 pb-5">
									<img
										src="https://user-images.githubusercontent.com/27040483/28728094-99f3e3f6-73c7-11e7-8f8d-28912dc6ac0d.png"
										class="img-fluid mb-5"
										alt="logo"
										width="100"
										height="100"
									/>
									<h2 class="fw-bold mb-2 text-uppercase">Stremio-Jackett</h2>
									<p class="text-white-50 mb-5">v{{version}}</p>
									<h3 class="text-white mb-5">Configuration page</h3>
									<p class="text-white-50 mb-5">
										Please fill in the following fields to install Stremio-Jackett
									</p>

									<div class="form-outline form-white mb-4">
										<label class="form-label"
											>Stream service (direct torrent or debrid service)</label
										>
										<select
											required
											class="form-select"
											aria-label=""
											id="serviceProvider"
											onchange="updateLink()"
										>
											<option value="torrent">torrent</option>
											<option value="realdebrid">realdebrid</option>
											<option value="alldebrid">alldebrid</option>
											<option value="premiumize">premiumize</option>
											<option value="debridlink">debridlink</option>
										</select>
									</div>

									<div class="form-outline form-white mb-4" id="realDebridApiDiv">
										<label class="form-label"
											>Real-Debrid API key (you can get it
											<a href="https://real-debrid.com/apitoken" target="_blank"
												>here</a
											>)</label
										>
										<input
											required
											class="form-control form-control-lg"
											placeholder="Enter your Real-Debrid service API key"
											id="realDebridApi"
											oninput="updateLink()"
										/>
									</div>

									<div class="form-outline form-white mb-4" id="allDebridApiDiv">
										<label class="form-label"
											>All-Debrid API key (you can get it
											<a href="https://alldebrid.fr/apikeys/" target="_blank"
												>here</a
											>)</label
										>
										<input
											required
											class="form-control form-control-lg"
											placeholder="Enter your All-Debrid service API key"
											id="allDebridApi"
											oninput="updateLink()"
										/>
									</div>

									<div class="form-outline form-white mb-4" id="premiumizeApiDiv">
										<label class="form-label"
											>Premiumize API key</label
										>
										<input
											required
											class="form-control form-control-lg"
											placeholder="Enter your All-Debrid service API key"
											id="premiumizeApi"
											oninput="updateLink()"
										/>
									</div>

									<div class="form-outline form-white mb-4" id="debridLinkApiDiv">
										<label class="form-label"
											>Debrid-Link API key (you can get it
											<a href="https://debrid-link.com/webapp/apikey" target="_blank"
												>here</a
											>)</label
										>
										<input
											required
											class="form-control form-control-lg"
											placeholder="Enter your Debrid-Link service API key"
											id="debridLinkApi"
											oninput="updateLink()"
										/>
									</div>

									<div class="form-outline form-white mb-4" id="maxResultDiv">
										<label class="form-label">Number of results per search </label>
										<input
											required
											class="form-control form-control-lg"
											placeholder="Enter maximum results per search"
											oninput="updateLink()"
											onchange="onChangeMaxResults()"
											id="maxResults"
										/>
									</div>

									<div class="form-outline form-white mb-4" id="sortingDiv">
										<label class="form-label">Sorting</label>
										<fieldset>
											<input
												type="radio"
												id="quality"
												name="sorting"
												value="quality"
												oninput="updateLink()"
												checked
											/>
											<label for="sorting1">Quality</label>
											<input
												type="radio"
												id="sizeasc"
												name="sorting"
												value="sizeasc"
												oninput="updateLink()"
											/>
											<label for="sorting2">Size (asc)</label>
											<input
												type="radio"
												id="sizedesc"
												name="sorting"
												value="sizedesc"
												oninput="updateLink()"
											/>
											<label for="sorting3">Size (desc)</label>
									</div>

									<div class="form-outline form-white mb-4" id="useTmdb">
										<label class="form-label">Use TMDB (gives more accurate results)</label>
										<input
											required
											type="checkbox"
											oninput="updateLink()"
											id="checkedTmdb"
										/>
									</div>

									<div class="form-outline form-white mb-4" id="tmdbApi">
										<label class="form-label">TMDB API Key (get your own <a href="https://www.themoviedb.org/signup" target="_blank">here</a> (findable in "Parameters"))</label>
										<input
											required
											class="form-control form-control-lg"
											placeholder="Enter your TMDB API key"
											oninput="updateLink()"
											id="tmdbApiKey"
										/>
									</div>

									<div class="form-outline form-white mb-4">
										<label class="form-label"
											>Language (will only show this language and MULTI)</label
										>
										<select
											required
											class="form-select"
											aria-label=""
											id="languageException"
											onchange="updateLink()"
										>
											<option value="en">ðŸ‡¬ðŸ‡§</option>
											<option value="fr">ðŸ‡«ðŸ‡·</option>
											<option value="de">ðŸ‡©ðŸ‡ª</option>
											<option value="es">ðŸ‡ªðŸ‡¸</option>
											<option value="pt">ðŸ‡µðŸ‡¹</option>
											<option value="it">ðŸ‡®ðŸ‡¹</option>
										</select>
									</div>

									<div class="form-outline form-white mb-4">
										<label class="form-label">Jackett URL</label>
										<input
											required
											class="form-control form-control-lg"
											placeholder="For example 'http(s)://jackett_url:port'"
											oninput="updateLink()"
											id="jackettUrl"
										/>
									</div>

									<div class="form-outline form-white mb-4">
										<label class="form-label">Jackett API Key</label>
										<input
											required
											class="form-control form-control-lg"
											placeholder="Enter your Jackett API key"
											oninput="updateLink()"
											id="jackettApi"
										/>
									</div>

									<a id="configureLink" href="" class="btn btn-primary">Install</a>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</section>
		<script>
			document.getElementById("realDebridApiDiv").style.display = "none";
			document.getElementById("allDebridApiDiv").style.display = "none";
			document.getElementById("premiumizeApiDiv").style.display = "none";
			document.getElementById("debridLinkApiDiv").style.display = "none";
			document.getElementById("sortingDiv").style.display = "none";
			document.getElementById("tmdbApi").style.display = "none";

			function onChangeMaxResults() {
				let addonType = document.getElementById("serviceProvider").value;
				let maxResultsInput = document.getElementById("maxResults");

				if (addonType !== "torrent" && Number(maxResultsInput.value) > 15) {
					maxResultsInput.value = String(15);
				}
			}

			function updateLink() {
				let serviceProvider = document.getElementById("serviceProvider").value;
				let realDebridApi = document.getElementById("realDebridApi").value;
				let allDebridApi = document.getElementById("allDebridApi").value;
				let premiumizeApi = document.getElementById("premiumizeApi").value;
				let debridLinkApi = document.getElementById("debridLinkApi").value;
				let maxResults = document.getElementById("maxResults").value;
				let jackettUrl = document.getElementById("jackettUrl").value;
				let jackettApi = document.getElementById("jackettApi").value;
				let sorting = document.querySelector('input[name="sorting"]:checked').value;
				let tmdbChecked = document.getElementById("checkedTmdb").checked;
				let tmdbApiKey = document.getElementById("tmdbApiKey").value;
				let languageException = document.getElementById("languageException").value;
				if (tmdbChecked) {
					document.getElementById("tmdbApi").style.display = "block";
				} else {
					document.getElementById("tmdbApi").style.display = "none";
				}
				let ascOrDesc
				if (sorting === "sizeasc") {
					ascOrDesc = "asc"
				} else if (sorting === "sizedesc") {
					ascOrDesc = "desc"
				} else {
					ascOrDesc = null
				}

				if (jackettUrl.at(-1) === "/") {
					jackettUrl = jackettUrl.slice(0, -1);
				}

				let dynamicLink = document.getElementById("configureLink");

				if (serviceProvider === "torrent") {
					document.getElementById("realDebridApiDiv").style.display = "none";
					document.getElementById("allDebridApiDiv").style.display = "none";
					document.getElementById("premiumizeApiDiv").style.display = "none";
					document.getElementById("debridLinkApiDiv").style.display = "none";
					document.getElementById("sortingDiv").style.display = "none";
					let dataJson = {
						streamService: serviceProvider,
						jackettUrl: jackettUrl,
						jackettApiKey: jackettApi,
						maxResults: maxResults,
						sorting: sorting,
						ascOrDesc: ascOrDesc,
						tmdbApiKey: tmdbApiKey,
						locale: languageException
					};
					dynamicLink.href = `stremio://${
						window.location.host
					}${window.location.pathname.replace(/\/configure\/?/, "")}/${btoa(
						JSON.stringify(dataJson)
					)}/manifest.json`;
				} else if (serviceProvider === "realdebrid") {
					document.getElementById("realDebridApiDiv").style.display = "block";
					document.getElementById("allDebridApiDiv").style.display = "none";
					document.getElementById("premiumizeApiDiv").style.display = "none";
					document.getElementById("debridLinkApiDiv").style.display = "none";
					document.getElementById("sortingDiv").style.display = "block";
					let dataJson = {
						streamService: serviceProvider,
						jackettUrl: jackettUrl,
						jackettApiKey: jackettApi,
						debridApiKey: realDebridApi,
						maxResults: maxResults,
						sorting: sorting,
						ascOrDesc: ascOrDesc,
						tmdbApiKey: tmdbApiKey,
						locale: languageException
					};
					dynamicLink.href = `stremio://${
						window.location.host
					}${window.location.pathname.replace(/\/configure\/?/, "")}/${btoa(
						JSON.stringify(dataJson)
					)}/manifest.json`;
				} else if (serviceProvider === "alldebrid") {
					document.getElementById("realDebridApiDiv").style.display = "none";
					document.getElementById("premiumizeApiDiv").style.display = "none";
					document.getElementById("allDebridApiDiv").style.display = "block";
					document.getElementById("debridLinkApiDiv").style.display = "none";
					document.getElementById("sortingDiv").style.display = "block";

					let dataJson = {
						streamService: serviceProvider,
						jackettUrl: jackettUrl,
						jackettApiKey: jackettApi,
						debridApiKey: allDebridApi,
						maxResults: maxResults,
						sorting: sorting,
						ascOrDesc: ascOrDesc,
						tmdbApiKey: tmdbApiKey,
						locale: languageException
					};
					dynamicLink.href = `stremio://${
						window.location.host
					}${window.location.pathname.replace(/\/configure\/?/, "")}/${btoa(
						JSON.stringify(dataJson)
					)}/manifest.json`;
				} else if (serviceProvider === "premiumize") {
					document.getElementById("realDebridApiDiv").style.display = "none";
					document.getElementById("allDebridApiDiv").style.display = "none";
					document.getElementById("premiumizeApiDiv").style.display = "block";
					document.getElementById("debridLinkApiDiv").style.display = "none";
					document.getElementById("sortingDiv").style.display = "block";

					let dataJson = {
						streamService: serviceProvider,
						jackettUrl: jackettUrl,
						jackettApiKey: jackettApi,
						debridApiKey: premiumizeApi,
						maxResults: maxResults,
						sorting: sorting,
						ascOrDesc: ascOrDesc,
						tmdbApiKey: tmdbApiKey,
						locale: languageException
					};
					dynamicLink.href = `stremio://${
						window.location.host
					}${window.location.pathname.replace(/\/configure\/?/, "")}/${btoa(
						JSON.stringify(dataJson)
					)}/manifest.json`;
				} else if (serviceProvider === "debridlink") {
					document.getElementById("realDebridApiDiv").style.display = "none";
					document.getElementById("allDebridApiDiv").style.display = "none";
					document.getElementById("premiumizeApiDiv").style.display = "none";
					document.getElementById("debridLinkApiDiv").style.display = "block";
					document.getElementById("sortingDiv").style.display = "block";

					let dataJson = {
						streamService: serviceProvider,
						jackettUrl: jackettUrl,
						jackettApiKey: jackettApi,
						debridApiKey: debridLinkApi,
						maxResults: maxResults,
						sorting: sorting,
						ascOrDesc: ascOrDesc,
						tmdbApiKey: tmdbApiKey,
						locale: languageException
					};
					dynamicLink.href = `stremio://${
						window.location.host
					}${window.location.pathname.replace(/\/configure\/?/, "")}/${btoa(
						JSON.stringify(dataJson)
					)}/manifest.json`;
				}
			}

			function prefillUrl() {
				const urlParams = new URLSearchParams(window.location.search);
				if (urlParams.get('serviceProvider') === null) {
					return
				} else {
					const serviceProvider = urlParams.get('serviceProvider');
					const realDebridApi = urlParams.get('realDebridApi');
					const allDebridApi = urlParams.get('allDebridApi');
					const premiumizeApi = urlParams.get('premiumizeApi');
					const debridLinkApi = urlParams.get('debridLinkApi');
					const jackettUrl = urlParams.get('jackettUrl');
					const jackettApi = urlParams.get('jackettApi');
					const maxResults = urlParams.get('maxResults');
					const sorting = urlParams.get('sorting');
					const tmdbApiKey = urlParams.get('tmdbApiKey');
					const locale = urlParams.get('locale');
					document.getElementById("serviceProvider").value = serviceProvider;
					document.getElementById("realDebridApi").value = realDebridApi;
					document.getElementById("allDebridApi").value = allDebridApi;
					document.getElementById("premiumizeApi").value = premiumizeApi;
					document.getElementById("debridLinkApi").value = debridLinkApi;
					document.getElementById("jackettUrl").value = jackettUrl;
					document.getElementById("jackettApi").value = jackettApi;
					document.getElementById("maxResults").value = maxResults;
					document.getElementById(sorting).checked = true;
					document.getElementById("tmdbApiKey").value = tmdbApiKey;
					document.getElementById("languageException").value = locale;
					updateLink();
				}
			}

			// Appelle la fonction au chargement de la page
			window.onload = prefillUrl;
		</script>
	</body>
</html>
